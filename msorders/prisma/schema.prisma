// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id                    Int           @id @default(autoincrement())
  customerId            Int
  status                OrderStatus   @default(PENDING)
  items                 OrderItem[]
  //deliveryAddress deliveryAddress
  subtotal              Decimal
  deliveryFee           Decimal
  total                 Decimal
  paymentMethod         PaymentMethod
  estimatedDeliveryTime Int? // em minutos
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt

  @@map("orders")
}

model OrderItem {
  id          Int      @id @default(autoincrement())
  orderId     Int
  order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId   Int
  product     Product? @relation(fields: [productId], references: [id])
  name        String
  description String?
  quantity    Int
  price       Decimal

  @@map("order_items")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Decimal
  category    String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orderItems OrderItem[]

  @@map("products")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PREPARING
  OUT_FOR_DELIVERY
  ARRIVING
  DELIVERED
  CANCELLED
}

enum PaymentMethod {
  CREDIT_CARD
  DEBIT_CARD
  PIX
  CASH
}
